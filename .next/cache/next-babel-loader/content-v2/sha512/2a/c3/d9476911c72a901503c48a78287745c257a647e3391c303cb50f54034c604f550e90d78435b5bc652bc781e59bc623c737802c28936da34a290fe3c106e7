{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useLayoutEffect, useState } from 'react';\nexport var useWindowSize = function useWindowSize() {\n  _s();\n\n  var useIsomorphicLayoutEffect = true ? useLayoutEffect : useEffect;\n\n  var _useState = useState({\n    width: 0,\n    height: 0\n  }),\n      size = _useState[0],\n      setSize = _useState[1];\n\n  useIsomorphicLayoutEffect(function () {\n    function updateSize() {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    if (true) {\n      window.addEventListener('resize', updateSize);\n      updateSize();\n      return function () {\n        return window.removeEventListener('resize', updateSize);\n      };\n    }\n  }, []);\n  return size;\n};\n\n_s(useWindowSize, \"3GCwEeIU6HT56hWTvk9kh6GeKbw=\", true);","map":{"version":3,"sources":["C:/Users/jgandia/Desktop/PROJECTS/next-ezer/src/utils/use-window-size.ts"],"names":["useEffect","useLayoutEffect","useState","useWindowSize","useIsomorphicLayoutEffect","width","height","size","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,eAApB,EAAqCC,QAArC,QAAqD,OAArD;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AACjC,MAAMC,yBAAyB,GAC7B,OAAgCH,eAAhC,GAAkDD,SADpD;;AADiC,kBAITE,QAAQ,CAAC;AAAEG,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAAD,CAJC;AAAA,MAI1BC,IAJ0B;AAAA,MAIpBC,OAJoB;;AAKjCJ,EAAAA,yBAAyB,CAAC,YAAM;AAC9B,aAASK,UAAT,GAAsB;AACpBD,MAAAA,OAAO,CAAC;AAAEH,QAAAA,KAAK,EAAEK,MAAM,CAACC,UAAhB;AAA4BL,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAA3C,OAAD,CAAP;AACD;;AACD,cAAmC;AACjCF,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,UAAlC;AACAA,MAAAA,UAAU;AACV,aAAO;AAAA,eAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,UAArC,CAAN;AAAA,OAAP;AACD;AACF,GATwB,EAStB,EATsB,CAAzB;AAUA,SAAOF,IAAP;AACD,CAhBM;;GAAMJ,a","sourcesContent":["import { useEffect, useLayoutEffect, useState } from 'react';\r\n\r\nexport const useWindowSize = () => {\r\n  const useIsomorphicLayoutEffect =\r\n    typeof window !== 'undefined' ? useLayoutEffect : useEffect;\r\n\r\n  const [size, setSize] = useState({ width: 0, height: 0 });\r\n  useIsomorphicLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener('resize', updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener('resize', updateSize);\r\n    }\r\n  }, []);\r\n  return size;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}